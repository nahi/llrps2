<?xml version="1.0" encoding="UTF-8"?>
<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:amq="http://activemq.org/config/1.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans.xsd
  http://activemq.org/config/1.0
  http://people.apache.org/repository/org.apache.activemq/xsds/activemq-core-4.1-incubator-SNAPSHOT.xsd">

  <!-- import properties -->
  
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location" value="classpath:org/ctor/dev/llrps2/llrps2.properties" />
  </bean>

  <!-- Object persistence -->
  
  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="org.postgresql.Driver" />
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
  </bean>

  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration" />
    <property name="configLocation" value="classpath:org/ctor/dev/llrps2/coordinator/hibernate.cfg.xml"/>
  </bean>

  <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory"><ref local="sessionFactory"/></property>
  </bean>

  <!-- make sure that classes with @Transactional have the proper tx proxy -->
  <!-- bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/ -->

  <bean class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
    <property name="transactionInterceptor" ref="txInterceptor"/>
  </bean>

  <bean id="txInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
    <property name="transactionManager" ref="txManager"/>
    <property name="transactionAttributeSource">
      <bean class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"/>
    </property>
  </bean>
  
  <!-- JMS generic definition -->
  
  <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory" ref="jmsConnectionFactory" />
  </bean>

  <bean id="jmsConnectionFactory"
      class="org.apache.activemq.pool.PooledConnectionFactory"
      depends-on="jmsBroker">
    <property name="connectionFactory">
      <bean class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${activemq.brokerurl}" />
      </bean>
    </property>
  </bean>
  
  <!-- Message broker definition -->
  
  <bean id="jmsBroker" class="org.apache.activemq.xbean.BrokerFactoryBean">
    <property name="config" value="classpath:org/ctor/dev/llrps2/coordinator/activemq.xml" />
    <property name="start" value="true" />
  </bean>
  
  <!-- JMS queue definition -->
  
  <bean id="agentEnrollmentRequest" class="org.apache.activemq.command.ActiveMQQueue">
    <constructor-arg value="urn:org.ctor.dev.llrps2.agentEnrollmentRequest" />
  </bean>
  
  <bean id="roundMediationRequest" class="org.apache.activemq.command.ActiveMQQueue">
    <constructor-arg value="urn:org.ctor.dev.llrps2.roundMediationRequest" />
  </bean>
  
  <bean id="connectedAgentNotification" class="org.apache.activemq.command.ActiveMQQueue">
    <constructor-arg value="urn:org.ctor.dev.llrps2.connectedAgentNotification" />
  </bean>
  
  <bean id="roundResultNotification" class="org.apache.activemq.command.ActiveMQQueue">
    <constructor-arg value="urn:org.ctor.dev.llrps2.roundResultNotification" />
  </bean>
  
  <!-- JMS container definition -->
  
  <bean id="agentManager" class="org.ctor.dev.llrps2.coordinator.AgentManager">
    <constructor-arg ref="jmsTemplate" />
    <property name="coordinator" ref="coordinator" />
    <property name="agentEnrollmentRequestDestination" ref="agentEnrollmentRequest" />
  </bean>
  <bean id="agentManagerContainer"
    class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    <property name="connectionFactory" ref="jmsConnectionFactory" />
    <property name="messageListener" ref="agentManager" />
    <property name="destination" ref="connectedAgentNotification" />
  </bean>

  <bean id="roundManager" class="org.ctor.dev.llrps2.coordinator.RoundManager">
    <constructor-arg ref="jmsTemplate" />
    <property name="coordinator" ref="coordinator" />
    <property name="roundMediationRequestDestination" ref="roundMediationRequest" />
  </bean>
  <bean id="roundManagerContainer"
    class="org.springframework.jms.listener.DefaultMessageListenerContainer">
    <property name="connectionFactory" ref="jmsConnectionFactory" />
    <property name="messageListener" ref="roundManager" />
    <property name="destination" ref="roundResultNotification" />
  </bean>
  
  <!-- Application definition -->
  
  <bean id="coordinator" class="org.ctor.dev.llrps2.coordinator.Coordinator">
    <property name="agentManager" ref="agentManager" />
    <property name="roundManager" ref="roundManager" />
  </bean>
</beans>